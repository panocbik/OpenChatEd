http {
    # Disable server tokens to hide the nginx version number
    server_tokens off;

    # Set up the upstream server for your application
    upstream app {
        server api:3000;
    }

    # Generate a strong SSL cipher suite using the Mozilla SSL Configuration Generator
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384;

    # Enable HTTP/2 and SSL/TLS settings
    server {
        listen 80;
        server_name ${DOMAIN_NAME};
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name ${DOMAIN_NAME};

        # SSL/TLS settings
        ssl_certificate /usr/src/certs/fullchain.pem;
        ssl_certificate_key /usr/src/certs/privkey.pem;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_session_tickets off;
        ssl_buffer_size 4k;

        # HSTS preloading
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        # Set up rate limiting for the /api location
        limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
        limit_req_status 429;
 
        # Serve static files
        root /usr/share/nginx/html;
        index index.html;
 
        # Redirect to HTTPS
        error_page 497 301 =307 https://$host$request_uri;

        # Rewrite requests to /api to the backend server
        location /api {
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Enables WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Rate limiting for /api location
            limit_req zone=one burst=5 nodelay;
        }

        # Configure access and error logs
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
    }
}
